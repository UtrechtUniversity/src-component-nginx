
location @custom_401 {
	internal;

	return 302 "$authorization_endpoint?client_id=$client_id&redirect_uri=$scheme://$http_host/oauth2_callback&response_type=token&scope=openid&response_format=query_param";
}

location = /oauth2_callback {
	add_header Content-Type text/html;

	set $access_token "";
	set $exires_in 43200;
 
	if ($args ~* "access_token=(\w+)") {
		set $access_token $1;
	}
 
	if ($args ~* "expires_in=(\w+)") {
		set $expires_in $1;
	}
 
	if ($access_token ~ "^$") {
		return 403 "Unauthorized";
	} 
 
	add_header Set-Cookie "Authorization=$access_token;Path=/;Max-Age=$expires_in";

	return 302 $scheme://$http_host/;
}

location = /logout {
	add_header Content-Type text/html;
	add_header Set-Cookie "Authorization=; expires=Thu, 01 Jan 1970 00:00:00 GMT";

	return 200 'User logged out !';
}

location = /test {
	auth_request /validate;

	error_page 401 = @custom_401;

	add_header Content-Type text/plain;

	content_by_lua_block {
		local headers = ngx.req.get_headers()
		ngx.say("Headers:")

		for key, value in pairs(headers) do
			ngx.say("* " .. key .. " : " .. value)
		end
 	}
}

location = /validate {
	internal;

	add_header Content-Type text/plain;

	if ($cookie_authorization ~ "^$") {
		return 401;
	}

	content_by_lua_block {
		local https = require("ssl.https")
		local cjson = require("cjson")
		local ltn12 = require("ltn12") 

		local response = {}
		local _, code, _, _ = https.request{
			url = ngx.var.userinfo_endpoint,
			method = "GET",
			headers = {
				["Content-Type"] = "application/json",
				["User-Agent"] = "Custom User Agent",
				["Cookie"] = string.format("Authorization=%s", ngx.var.cookie_authorization)
			},
			sink = ltn12.sink.table(response)
		}

		if code == 200 then
			local data = table.concat(response)
			local json = cjson.decode(data)

			ngx.req.set_header(ngx.var.header_name, json["username"])
			ngx.exit(ngx.HTTP_OK)
		else
			ngx.exit(ngx.HTTP_FORBIDDEN)
		end
	}
}
